{
  "description": [
    "Your web component is almost ready for use. The browser just doesn't know that it exists.",
    "How can we fix it? We need to define it as a custom element! When we do, the browser will know.",
    "Define your element with the 'window.customElements.define()' method. It takes two parameters: a method reference to your identification string and a class reference to your rock. Add this to the bottom of your script."
  ],
  "followUpMessage": "Your rock is ready! Hooray! You can view it below this text box! Well done, player! Are you ready for the next steps?",
  "exercises": [
    {
      "fileName": "rock.html",
      "template": "<link rel=\"import\" href=\"lib/polymer/polymer-element.html\">\n\n<dom-module id=\"rock\">\n    <template>\n        <img src=\"assets/images/rock.png\"/>\n    </template>\n</dom-module>\n\n<script>\n    class Rock extends Polymer.Element {\n\n        static get is() {\n            return 'rock';\n        }\n    }\n</script>",
      "hint": "<link rel=\"import\" href=\"lib/polymer/polymer-element.html\">\n\n<dom-module id=\"rock\">\n    <template>\n        <img src=\"assets/images/rock.png\"/>\n    </template>\n</dom-module>\n\n<script>\n    class Rock extends Polymer.Element {\n\n        static get is() {\n            return 'rock';\n        }\n    }\n\n    window.customElements.define(Rock.is, Rock);\n</script>",
      "minifiedHtmlSolutions": [
        "<link rel=\"import\"href=\"lib/polymer/polymer-element.html\"><dom-module id=\"rock\"><template><img src=\"assets/images/rock.png\"></template></dom-module><script></script>"
      ],
      "minifiedJavaScriptSolutions": [
        "class Rock extends Polymer.Element{static get is(){return'rock'}}window.customElements.define(Rock.is,Rock)"
      ]
    }
  ],
  "image": "rock.png"
}